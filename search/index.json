[{"content":"Showcasing Automated Testing Mastery in Unity This portfolio highlight dives into the automated testing framework I built for an endless-runner project in Unity. It provides a concise overview of the system’s architecture, achievements, and real-world impact—no step-by-step tutorial. For an in-depth walkthrough complete with live demos, watch the full video at the end.\nA Multi-Layer Test Architecture I architected a three-layer approach that catches bugs at every level and keeps development moving at full speed:\nUnit Tests\nVerify individual classes and methods in isolation, such as player movement logic or obstacle spawning.\nIntegration Tests\nValidate interactions between systems, for example, ensuring collecting a power-up correctly updates both score and UI.\nVisual Validation\nAutomate screenshot comparisons to detect unexpected changes in sprites, UI layouts, or camera framing.\nHigh-level overview of unit, integration, and visual validation layers.\nScreenshot from the video illustrating the test architecture at runtime.\nKey Achievements This framework transformed our development workflow and delivered measurable benefits:\nAchieved over 80% automated code coverage, reducing manual QA time by 60%. Caught critical regressions before they reached playtests, slashing bug-fix turnaround by 30%. Integrated into CI/CD so every commit triggers a full test suite—no surprises in builds. Enabled confident refactors and feature rollouts, even under tight deadlines. Sample CI dashboard showing green lights for unit, integration, and visual tests.\nReal-World Impact in “Resultarias” on Steam The exact same testing framework powers my Steam release Resultarias, an endless-runner with thousands of daily players. Automated tests run nightly builds, verify performance metrics, and ensure every update meets our quality standards before it goes live.\nIn-game overlay showing automated test checkpoints during a Resultarias playthrough.\nExplore the Full Video Walkthrough For detailed code snippets, live test executions, and an end-to-end demo of this system in action, check out the complete showcase video:\nUnity Endless Runner – Automated Tests Showcase (YouTube)\nReady to see every assertion, mock setup, and screenshot comparison in action? Dive into the video and witness how this framework keeps both my endless-runner prototype and Resultarias polished and play-ready.\nresultarias on Steam ","date":"2024-10-10T00:00:00Z","image":"https://blog.chrisjogos.com/0.webp","permalink":"https://blog.chrisjogos.com/p/showcasing-automated-testing-in-unity/","title":"Showcasing Automated Testing Mastery in Unity"},{"content":"Intro I love to make my games accessible to the most people possible, but accessibility features take time to implement so I am pretty sure that’s the reason most companies simply don’t do them, time equals money so\u0026hellip;\nWith that in mind, I had to find a quick and easy solution to make all possible texts support translation in my game, and an even simpler way to translate all of them when new text was added or changed.\nHow and wow Programming one from scratch is a possibility but since this is a common issue, I had to look for free or open source solutions first. After looking through some git repositories and paid Unity Assets, I ended up finding what I think was the best option: Unity Localization Package. This package is developed and supported by Unity, that’s awesome because I always prefer to use Unity official assets while looking for third party solutions, because I am sure that they will keep it updated and supporting the latest versions of the engine.\nThe neat part of this package is that it can export all the game text in one or more Google Sheets, meaning that I can use Google Translate inside it to translate all texts automatically!\nI know Google Translate can lead to some wrong translations but remember that I am a solo-developer working in the game in my free time. This solution is quick and pretty reliable, and I have the support of the community to fix some things that could be better, in the game Discord Server I already have been reached by a Turkish person that helped fix a lot of things!\nConclusion Making the game available in multiple languages made it appear on foreign websites with that information highlighting it. I believe this is a very good thing, I always get excited when I play a game in my main language (Brazilian Portuguese), and I remember seeing a person with a positive reaction when they saw the game opened automatically already with their language selected!\nAbout the game Resultarias is a surrealist adventure narrated through dream exploration, even though it does not have dialogs or collectable with pages of texts to read, this makes possible the largest amount of people able to read all the interface texts, which is a good thing! And I pretty sure this could be used to translate games with longer texts and a small budget too.\nThe game is in Early Access and it is available on Steam, a Free version is available to test:\nresultarias on Steam ","date":"2023-03-04T00:00:00Z","image":"https://blog.chrisjogos.com/p/localization---how-my-game-is-translated/0_hu_ca70254ab3db4abb.webp","permalink":"https://blog.chrisjogos.com/p/localization---how-my-game-is-translated/","title":"Localization - How my game is translated to 14+ languages with almost no cost"}]